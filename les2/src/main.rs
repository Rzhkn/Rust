fn main() {

    //---------Виды переменных---------
    let a = 5;
    // a = 6; Приведет к ошибке
    let mut b = 5;
    b = 6; //Ошибки не будет

    println!("a={}, b={}",a,b);

    //Можно сначала объявить, а потом присвоить значение
    let c1;
    c1=5;

    //С константами так нельзя! Данный код приведет к ошибке
    //const C2: u32;
    //c2=5;
    //Для них нужно сразу указывать тип данных и значение
    const C2: u32 = 5;

    println!("c1={}, c2={}",c1,C2);


    //---------Типы данных---------
    //Разрешается использавать разделитель _ для облегчения чтения
    let d: i32 = 10_000;
    let e = 10000; //i32
    println!("d={}, e={}",d,e);
    println!("i32 в i8={}",e as i8);

    let f = 3.1; //f64
    let g: f32 = 4.6; //f32
    println!("f={}, g={}",f,g);
    //при пребразовании типа из добного числа в целочисленное происходит отбрасывание дробной части, а не округление
    println!("f32 в i32={}",g as i32); 

    let h: bool = true;
    println!("h={}",h);

    let i = 'A';
    let j = '❤';
    println!("i={}, j={}",i,j);
    println!("char в i32={}",i as i32);

    let k = [1,2,3,4,5];
    println!("k[1]={}",k[1]);

    let l = (2,'A',3.4);
    println!("l.1={}",l.1);


    //---------Функции---------
    let mut m = 3;
    println!("m={}, res={}, m2={}",m,fun_1(m),m);

    let n = || println!("Hello!");
    n();
    n();

    let o = {
        println!("Блок кода");
        1
    }; //Блок кода в отличие от анонимной функции выполняется только один раз в момент присваивания переменной
    println!("------");
    println!("{}",o);
    println!("------");
    println!("{}",o);

}

fn fun_1(mut x: i16) -> i16 {
    x=5;
    x+1
}
